<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:YesCommander">
    <!-- Custom ComboBox Style -->
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <SolidColorBrush x:Key="MetroThemeComboBoxToggleButtonMouseOverTextBoxBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="MetroThemeComboBoxToggleButtonPressedTextBoxBackground" Color="Transparent"/>

    <Style x:Key="MetroThemeComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"   Value="true"/>
        <Setter Property="AllowDrop"  Value="true"/>
        <Setter Property="MinWidth"  Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle"  Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroThemeComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"   Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Chrome1" BorderThickness="{TemplateBinding BorderThickness}"                               
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"                                       
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="Chrome" Background="{TemplateBinding Background}" BorderThickness="1,0,0,0" Margin="0"
                                    BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Width="16">
                                <Path Name="Arrow" Fill="Gray" Data="{StaticResource DownArrowGeometry}"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{DynamicResource MetroBrush}"/>
                            <Setter TargetName="Chrome1" Property="Background"
                                    Value="{StaticResource MetroThemeComboBoxToggleButtonPressedTextBoxBackground}"/>
                            <Setter TargetName="Arrow" Property="Fill"
                                    Value="{DynamicResource MetroHighlightedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="Chrome1" Value="True">
                            <Setter TargetName="Chrome" Property="Background"
                                    Value="{StaticResource MetroThemeComboBoxToggleButtonMouseOverTextBoxBackground}"/>
                            <Setter TargetName="Chrome1" Property="Background"
                                    Value="{DynamicResource MetroHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" SourceName="Chrome1" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{DynamicResource MetroBrush}"/>
                            <Setter TargetName="Chrome1" Property="Background"
                                    Value="{StaticResource MetroThemeComboBoxToggleButtonMouseOverTextBoxBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="Background" Value="{DynamicResource MetroBrush}"/>
                            <Setter TargetName="Chrome1" Property="Background"
                                    Value="{StaticResource MetroThemeComboBoxToggleButtonPressedTextBoxBackground}"/>
                            <Setter TargetName="Arrow" Property="Fill"
                                    Value="{DynamicResource MetroHighlightedForegroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4" StrokeThickness="1" Stroke="Black"
                               StrokeDashArray="1 2" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MetroBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource MetroPanelBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MetroForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3,3,23,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" Focusable="false" ClickMode="Press"
                                    Style="{StaticResource MetroThemeComboBoxReadonlyToggleButton}"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center"
                                        Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
                        <TextBox Visibility="Hidden" Style="{StaticResource MetroThemeComboBoxEditableTextBox}" HorizontalAlignment="Left"
                                Margin="3,3,23,3" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True"
                                Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False"
                            AllowsTransparency="True" PopupAnimation="Slide">
                            <!--<theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">-->
                            <Border x:Name="DropDownBorder"  BorderBrush="{DynamicResource MetroBorderBrush}"
                                Background="{DynamicResource MetroPanelBackgroundBrush}" BorderThickness="1">
                                <Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}"
                                    SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ScrollViewer x:Name="PART_ScrollViewer" Margin="4,6,4,6" SnapsToDevicePixels="True" CanContentScroll="True"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" >
                                        <VirtualizingStackPanel x:Name="ItemsPresenter" IsItemsHost="True" VirtualizingStackPanel.IsVirtualizing="True"
                                                            VirtualizingStackPanel.VirtualizationMode="Recycling" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <!--<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />-->
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                            <!--</theme:SystemDropShadowChrome>-->
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                            <!--<Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>-->
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MetroBorderBrush}"/>
                <Setter Property="Background" Value="{DynamicResource MetroPanelBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource  MetroForegroundBrush}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Grid.Column="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" ClickMode="Press"
                                              Style="{StaticResource MetroThemeComboBoxReadonlyToggleButton}" x:Name="ToggleButton" Focusable="false"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" 
                                                  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
                                <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" Style="{StaticResource MetroThemeComboBoxEditableTextBox}"
                                         HorizontalAlignment="Left" Margin="3,3,23,3" VerticalAlignment="Center" Focusable="True" Background="Transparent"
                                         IsReadOnly="{TemplateBinding IsReadOnly}">
                                    <TextBox.ContextMenu>
                                        <ContextMenu Style="{DynamicResource MetroContextMenuStyle}">
                                            <MenuItem Header="Cut" Command="Cut"/>
                                            <MenuItem Header="Copy" Command="Copy"/>
                                            <MenuItem Header="Paste" Command="Paste"/>
                                        </ContextMenu>
                                    </TextBox.ContextMenu>
                                </TextBox>
                                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False"
                                       AllowsTransparency="True" PopupAnimation="Slide">
                                    <!--<theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">-->
                                    <Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                          Width="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True">
                                        <Border x:Name="DropDownBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                                Background="{TemplateBinding Background}" BorderThickness="1"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" >
                                            <VirtualizingStackPanel x:Name="ItemsPresenter" IsItemsHost="True" VirtualizingStackPanel.IsVirtualizing="True" 
                                                                    VirtualizingStackPanel.VirtualizationMode="Recycling" 
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <!--<ItemsPresenter  x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                                        </ScrollViewer>
                                    </Grid>
                                    <!--</theme:SystemDropShadowChrome>-->
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" TargetName="ToggleButton" Value="{DynamicResource MetroBrush}"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                                    <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                                    <!--<Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>-->
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                                    <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="True" />
                                        <Condition Property="IsEnabled" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </MultiTrigger>
                                <!--
                                <Trigger SourceName="Popup" Property="Popup.HasDropShadow" Value="true">
                                    <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
                                </Trigger>
                                -->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- End for Custom ComboBox Style -->
</ResourceDictionary>
